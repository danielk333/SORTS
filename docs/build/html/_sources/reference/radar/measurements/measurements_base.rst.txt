
.. currentmodule:: sorts.radar.measurements

.. _measurements:

=======================================
Measurements (sorts.radar.measurements)
=======================================

Description
-----------
The :ref:`measurements` module includes a wide set of features to simulate the theoretical measurements made by a :class:`radar system<sorts.radar.system.radar.Radar>`.

The simulation of a measurement first requires for the radar system to be controlled by a **control object** (e.g. either by a :ref:`Controller<controllers>` or by a :ref:`Scheduler<schedulers>`). After being generated by the control object, the controls must be processed by the radar. This step ensures that the controls are compatible with the radar system and generates the corresponding states of the radar. The **radar states** (which are an instance of :class:`sorts.radar.radar_controls.RadarControls`) hold the value of each one of the station parameters (wavelength, power, pointing direction, ...) as a function of time, which are needed to simulate the measurements.

The simulation of a measurement also requires a :class:`space object<sorts.targets.space_object.SpaceObject>` instance which encapsulates the **target** being observed.

Radar measurements
------------------
In the field of space awareness, the objective of a radar system is to use electromagnetic waves in the microwave regime to **detect** and **estimate the properties** of a moving *target* (space debris, meteors, ...). A target is considered detected when the *Signal-to-Noise Ratio* of the received signal is greater than the **detection** threshold of the radar system:

.. math::			SNR \ge SNR_{lim} 

After the detection, it is usual for experiments to also try to estimate the properties of the object, such as its range, velocity or RCS. The range and velocity of the target are determined using:

 * 	The **Time-of-Flight (ToF)** principle, which rely on the finitude of the speed of ligth to compute the range of the object. For a mono-static radar, the range :math:`R` of the target can be computed according to the equation:

	.. math:: 			R = \frac{c t_{ToF}}{2}

	Where :math:`c` is the speed of light in the considered propagation medium and :math:`t_{ToF}` is the time interval between the transmission and reception of the signal.

 * The **Doppler effect**, which predicts that the frequency shift :math:`f_D` between the received radar and transmitted signals according to the equation:

 	.. math:: 			f_D = \frac{2 v_r}{\lambda}

 	where :math:`v_r` is the radial velocity of the object and :math:`\lambda` is the wavelength of the radar.

.. seealso::
	The :ref:`signals` module offers a deeper overview of the computations involved in the simulation of radar signal propagation.

API Reference
-------------
The :class:`measurement.Measurement` class
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The :class:`measurement.Measurement` class is one of the central elements of the :ref:`measurements` module. It encapsulates the measurement unit of a radar system.

.. autosummary::
	:toctree: auto/

	~measurement.Measurement

Measuement related functions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The :ref:`measurements` module includes a set of data-processing and helper functions to handle the data produced by the :class:`measurement.Measurement` class. 

.. autosummary::
	:toctree: auto/

	~measurement.recover_data
	~measurement.get_max_snr_measurements

Examples
--------
TODO